---
title: "pyESD - Python Empirical-Statistical Downscaling"
---

# Summary

::: columns
::: {.column width="15%"}
![](img/pyESD.png){width="80%" style="border-radius:4px;"}
:::

::: {.column width="85%"}
PyESD is an open-source framework for empirical-statistical downscaling of any climate-related variable such as precipitation, temperature, and wind speed. The package can, for example, downscale General Circulation Model simulations of future climate to high resolution relevant for climate impact assessment such as droughts, flooding, wildfire risk, and others. The package was developed by **Dr. Daniel Boateng** as a PhD student and under supervision of Dr. Sebastian G. Mutz. pyESD's publication in *Geoscientific Model Development* can be accessed [here](https://gmd.copernicus.org/articles/16/6479/2023/).

| Category | Distribution | Source | Licence | Language |
| :-- | :-- | :-- | :-- | :-- |
| Data-Driven Modelling | PIP | [GitHub](https://github.com/Dan-Boat/PyESD) | MIT | Python |
:::
:::

# Software Description

The description below is a shortened version of the information found on [pyESD's online documentation](https://dan-boat.github.io/PyESD/).

## Scope

PyESD is an open-source framework of the Perfect Prognosis approach of statistical downscaling of any climate-related variable such as precipitation, temperature, and wind speed using reanalysis products eg. ERA5 as predictors. The package features all the downscaling cycles including data preprocessing, predictor selection, constructions (eg. using transformers), model selection, training, validation and evaluation, and future prediction. The package serves as the means of downscaling General Circulation Models of future climate to high resolution relevant for climate impact assessment such as droughts, flooding, wildfire risk, and others. The main specialties of the pyESD include:

* Well designed in an OOP style that considers weather stations as individual objects and all the downscaling routines as attributes. This ensures fewer lines of code that cover the end-to-end downscaling of climate change variable products.
* PyESD features many machine learning algorithms and predictor selection techniques that can be experimented with toward the selection and design of robust transfer functions that can be coupled with GCM to generate future estimates of climate change.
* And many other functionalities that are highlighted in the paper description of the package

![Typical workflow for using pyESD to downscale climate data before it is used for impact modelling [Boatend and Mutz, 2023](https://gmd.copernicus.org/articles/16/6479/2023/).](img/pyESD_outline.png){ width=100% }

## Documentation

The full documentation with examples can be found [here](https://dan-boat.github.io/PyESD/).

# Examples


This illustrative case study of downscaling temperature and precipitation in a catchment located in southwestern Germany was described in the package description paper of pyESD. All the modeling and analysis scripts are available on GitHub ([PyESD/example/Neckar](https://github.com/Dan-Boat/PyESD/tree/main/examples/Neckar)) and also on Zenodo ([supporting material](https://doi.org/10.5281/zenodo.7767681)). For more details about the findings, we refer to ([Boateng and Mutz, 2023](https://gmd.copernicus.org/preprints/gmd-2023-67/)).

![Location of weather stations used to train the models (from [Boateng and Mutz, 2023](https://dan-boat.github.io/PyESD/)).](img/pyESDneckar){ width=100% }
